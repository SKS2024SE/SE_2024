name: Pylint-Testing

on:
  push:
    branches: [ "main", "workflow-integration" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.13.0-rc.1"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        mkdir -p test-results/linter
        flake8 src --count --exit-zero --max-complexity=10 --max-line-length=127 --select=E9,F63,F7 --show-source --statistics > test-results/linter/linter-results-${{matrix.python-version}}.txt
    - name: Run pylint
      id: pylint
      run: |
        mkdir -p test-results/pylint
        pylint_score=$(pylint src --output-format=json | jq '.[0].score')
        pylint_score=${pylint_score:-0}
        echo "Pylint score: $pylint_score"
        echo "Pylint score::$pylint_score" >> $GITHUB_ENV
        pylint src > test-results/pylint/pylint-results-${{ matrix.python-version }}.txt

        - name: Generate Pylint Badge
        run: |
          score=${{ env.Pylint_score }}
          color="green"
          if (( $(echo "$score < 8.0" | bc -l) )); then
            color="red"
          elif (( $(echo "$score < 9.0" | bc -l) )); then
            color="yellow"
          fi
          echo "Creating badge..."
          curl -o pylint-badge-${{ matrix.python-version }}.svg "https://img.shields.io/badge/pylint-${score}-${color}.svg"
      
    - name: Run autopep8
      run: |
          find src -name '*.py' -exec autopep8 --in-place --aggressive --aggressive {} +

    - name: Upload Linter results 
      uses: actions/upload-artifact@v4
      with:
        name: Linter Results for ${{ matrix.python-version }}
        path: test-results/linter/linter-results-${{ matrix.python-version }}.txt
      if: ${{ always() }}
      
    - name: Test with pytest
      run: |
        pytest --junitxml=test-results/junit/junit-results-${{ matrix.python-version }}.xml
        
    - name: Upload Pytest results 
      uses: actions/upload-artifact@v4
      with:
        name: Pytest Results for ${{ matrix.python-version }}
        path: test-results/junit/junit-results-${{ matrix.python-version }}.xml
      if: ${{ always() }}

    - name: Upload Pylint results
      uses: actions/upload-artifact@v4
      with:
        name: Pylint Results for ${{ matrix.python-version }}
        path: test-results/pylint/pylint-results-${{ matrix.python-version }}.txt
      if: ${{ always() }}
